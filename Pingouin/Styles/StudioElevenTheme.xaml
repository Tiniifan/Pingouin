<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Window Border Style -->
    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Window.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="0" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Title Bar Style -->
    <Style x:Key="TitleBarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.TitleBar.BackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="10,10,0,0"/>
    </Style>

    <!-- Title Text Style -->
    <Style x:Key="TitleTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Menu Button Style -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,2"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Theme.Text.SecondaryBrush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Button Style -->
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close Button Style -->
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E81123"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toolbar Border Style -->
    <Style x:Key="ToolbarBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <!-- Modern Button Style -->
    <Style x:Key="ModernButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Width" Value="85"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.ActiveBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern ComboBox Style -->
    <Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Foreground="{TemplateBinding Foreground}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  Data="M 0 0 L 4 4 L 8 0 Z" Fill="{TemplateBinding Foreground}" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                        Background="{DynamicResource Theme.TitleBar.BackgroundBrush}" 
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource Theme.Border.Brush}"
                                        CornerRadius="5"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern ComboBoxItem Style -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="8,5" />
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}" />
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Color Picker Button Style -->
    <Style x:Key="ColorPickerButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Accent.Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="15">
                        <TextBlock Text="🎨"
                               FontSize="14"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Opacity="0.8"
                               Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.ActiveBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Theme Reset Button Style -->
    <Style x:Key="ThemeResetButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Accent.Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="15">
                        <TextBlock Text="❌"
                               FontSize="14"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Opacity="0.8"
                               Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.ActiveBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for separator in context menu -->
    <Style x:Key="Theme.ContextMenu.SeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="{StaticResource Theme.Border.Brush}"/>
        <Setter Property="Opacity" Value="0.3"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        </Grid.ColumnDefinitions>

                        <Rectangle Grid.Column="1"
                               Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=MenuItem}}"
                               SnapsToDevicePixels="true"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for menu items -->
    <Style x:Key="Theme.ContextMenu.MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="Padding" Value="12,8,12,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            </Grid.ColumnDefinitions>

                            <!-- Location for icon -->
                            <ContentPresenter x:Name="Icon"
                                          Grid.Column="0"
                                          Margin="0,0,10,0"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Icon}"/>

                            <!-- Element text -->
                            <ContentPresenter x:Name="HeaderHost"
                                          Grid.Column="1"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <!-- Text for keyboard shortcut -->
                            <TextBlock Grid.Column="2"
                                   Text="{TemplateBinding InputGestureText}"
                                   VerticalAlignment="Center"
                                   Margin="15,0,0,0"
                                   Foreground="{StaticResource Theme.Text.SecondaryBrush}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Theme.Control.HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Theme.Text.SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="HeaderHost" Property="Margin" Value="14,0,0,0" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Main style for ContextMenu -->
    <Style x:Key="Theme.AcrylicContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Accent.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="PopupBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="8" Opacity="0.4" Color="#000000"/>
                        </Border.Effect>
                        <StackPanel IsItemsHost="True"
                            ClipToBounds="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            Grid.IsSharedSizeScope="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource Theme.ContextMenu.MenuItemStyle}"/>
            <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource Theme.ContextMenu.SeparatorStyle}"/>
        </Style.Resources>
    </Style>

    <!-- Other things -->
    <Style x:Key="ExplorerContainerStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <Style x:Key="TabContainerStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.TitleBar.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>
    <Style x:Key="TabItemStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Margin" Value="2,2,0,0"/>
        <Setter Property="CornerRadius" Value="5,5,0,0"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style x:Key="TabTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,5,0"/>
    </Style>
    <Style x:Key="TabCloseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.SecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFF0000"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddTabButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="5,2,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationToolbarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>
    <Style x:Key="NavigationButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddressBarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style x:Key="AddressTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="SearchBarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.SecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="PanelBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Theme.Control.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Theme.Border.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="PanelHeaderStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="{DynamicResource Theme.TitleBar.BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,5"/>
    </Style>
    <Style x:Key="ModernTreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}" />
    </Style>
    <Style x:Key="ModernListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Background="{TemplateBinding Background}" CornerRadius="3">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource Theme.Control.HoverBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource Theme.Accent.Brush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.SecondaryBrush}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="DetailValueStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Theme.Text.PrimaryBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
    </Style>

</ResourceDictionary>